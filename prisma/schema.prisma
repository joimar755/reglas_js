// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Paciente {
  id           Int                     @id @default(autoincrement())
  nombre       String                  @unique
  email        String                  @unique
  diagnosticos Diagnostico_Pacientes[]
  createdAt    DateTime                @default(now())
}

model Rules {
  id          Int          @id @default(autoincrement())
  nombre      String
  condicion   Condicion[]
  eventoRegla EventRegla[]
}

model facts {
  id        Int         @id @default(autoincrement())
  nombre    String
  Condicion Condicion[]
}

model Condicion {
  id       Int     @id @default(autoincrement())
  factId   Int
  operator String
  value    Boolean
  fact     facts   @relation(fields: [factId], references: [id])
  reglaId  Int
  regla    Rules   @relation(fields: [reglaId], references: [id])

  @@unique([reglaId, factId])
}

model EventRegla {
  id          Int                     @id @default(autoincrement())
  type        String
  diagnostico String
  reglaId     Int                     @unique
  regla       Rules                   @relation(fields: [reglaId], references: [id])
  pacientes   Diagnostico_Pacientes[]
}

model Diagnostico_Pacientes {
  id           Int        @id @default(autoincrement())
  pacienteId   Int
  paciente     Paciente   @relation(fields: [pacienteId], references: [id])
  eventReglaId Int        @unique
  eventRegla   EventRegla @relation(fields: [eventReglaId], references: [id])
  createdAt    DateTime   @default(now())
}
